name: Laravel CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          extensions: mbstring, xml, mysql, sqlite3, curl, zip, gd
          coverage: xdebug
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Install npm dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Create environment files
        run: |
          cp .env.example .env
          cp .env.example .env.testing
          echo "APP_ENV=testing" >> .env.testing
          echo "DB_CONNECTION=mysql" >> .env.testing
          echo "DB_HOST=127.0.0.1" >> .env.testing
          echo "DB_PORT=3306" >> .env.testing
          echo "DB_DATABASE=laravel_test" >> .env.testing
          echo "DB_USERNAME=root" >> .env.testing
          echo "DB_PASSWORD=root" >> .env.testing

      - name: Generate application key
        run: php artisan key:generate

      - name: Prepare database
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan migrate:fresh --env=testing --force

      - name: Run tests with coverage
        run: XDEBUG_MODE=coverage ./vendor/bin/pest --coverage-clover=coverage.xml

      - name: Upload coverage to SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy Application via rsync
        shell: bash
        run: |
          rsync -avz --no-perms --no-owner --no-group --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='.env' \
            --exclude='storage/*' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='phpunit.xml' \
            ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/laravel-app/

      - name: Remote Setup & Deploy
        shell: bash
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd ~/laravel-app

            echo "🔧 Fixing permissions..."
            sudo chown -R $USER:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache

            echo "🌱 Setting up environment..."
            if [ ! -f .env ]; then
              cp .env.example .env
              php artisan key:generate
            fi

            echo "📦 Installing PHP dependencies..."
            composer install --no-dev --optimize-autoloader --ignore-platform-reqs

            echo "🗃️ Setting up database..."
            php artisan migrate --force

            echo "🧹 Clearing caches..."
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear

            echo "♻️ Restarting services..."
            sudo systemctl restart nginx
            sudo systemctl restart php8.4-fpm
          EOF
