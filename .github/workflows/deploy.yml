name: Deploy Laravel to Azure VM and Analyze with SonarCloud

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Increase file watcher limit
        run: |
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
          echo fs.inotify.max_user_instances=1024 | sudo tee -a /etc/sysctl.conf
          sudo sysctl -p
          echo "✅ File watcher limits updated:"
          sysctl fs.inotify.max_user_watches
          sysctl fs.inotify.max_user_instances

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install npm dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/config

      - name: Deploy with rsync
        run: |
          rsync -avz --no-perms --no-owner --no-group --delete \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='.env' \
            --exclude='storage/*' \
            --exclude='node_modules' \
            ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/laravel-app/

      - name: Remote Setup & Deploy
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            echo "🛠️ Installing PHP 8.2 and extensions..."
            sudo apt-get update -y
            sudo apt-get install -y software-properties-common
            sudo add-apt-repository ppa:ondrej/php -y
            sudo apt-get update -y
            sudo apt-get install -y php8.2 php8.2-cli php8.2-mbstring php8.2-xml php8.2-bcmath php8.2-curl php8.2-zip php8.2-mysql php8.2-sqlite3 unzip curl
            echo "🛠️ Installing Node.js and npm..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            echo "✅ Node.js and npm installed:"
            node -v
            npm -v
            echo "📦 Installing Composer (if needed)..."
            if ! command -v composer &> /dev/null; then
              php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
              php composer-setup.php || { echo "❌ Failed to install Composer"; exit 1; }
              sudo mv composer.phar /usr/local/bin/composer
              sudo chmod +x /usr/local/bin/composer
              rm composer-setup.php
            fi
            echo "✅ Composer installed:"
            composer --version
            echo "📦 Installing Laravel dependencies..."
            cd ~/laravel-app || { echo "❌ Laravel app directory not found"; exit 1; }
            composer install --optimize-autoloader --ignore-platform-reqs || { echo "❌ Failed to install Laravel dependencies"; exit 1; }
            echo "📦 Installing test dependencies..."
            composer require pestphp/pest pestphp/pest-plugin-laravel --dev --no-interaction --ignore-platform-reqs || { echo "❌ Failed to install test dependencies"; exit 1; }
            echo "🌐 Installing Nginx web server..."
            sudo apt update -y
            sudo apt install -y nginx
            echo "✅ Nginx installed:"
            nginx -v
            echo "🛡️ Setting up firewall rules..."
            sudo ufw allow OpenSSH
            sudo ufw allow 80/tcp
            sudo ufw allow 8080/tcp
            sudo ufw allow 5173/tcp
            sudo ufw --force enable
            echo "✅ Firewall rules configured:"
            sudo ufw status verbose
            echo "🔧 Setting PHP 8.2 as default..."
            sudo update-alternatives --set php /usr/bin/php8.2
            echo "✅ PHP version set to:"
            php -v
            echo "📦 Installing npm dependencies..."
            npm ci || { echo "❌ Failed to install npm dependencies"; exit 1; }
            npm run build || { echo "❌ Failed to build frontend"; exit 1; }
            echo "🔧 Fixing permissions..."
            sudo chown -R $USER:www-data storage bootstrap/cache
            sudo chmod -R ug+rwx storage bootstrap/cache
            echo "✅ Permissions fixed."
            echo "🌱 Setting up environment..."
            if [ ! -f .env ]; then
              cp .env.example .env || { echo "❌ Failed to copy .env file"; exit 1; }
            fi
            sed -i 's/^APP_ENV=.*/APP_ENV=production/' .env
            sed -i 's/^APP_DEBUG=.*/APP_DEBUG=false/' .env
            sed -i 's|^APP_URL=.*|APP_URL=http://${{ secrets.SSH_HOST }}|' .env
            sed -i 's|^ASSET_URL=.*|ASSET_URL=http://${{ secrets.SSH_HOST }}|' .env
            sed -i 's|^VITE_APP_URL=.*|VITE_APP_URL=http://${{ secrets.SSH_HOST }}|' .env

            if ! grep -q "^APP_KEY=base64:" .env; then
              echo "🔐 Generating Laravel APP_KEY..."
              php artisan key:generate || { echo "❌ Failed to generate APP_KEY"; exit 1; }
            fi

            echo "🗃️ Migrating database..."
            php artisan migrate --force || { echo "❌ Failed to migrate database"; exit 1; }

            echo "🔗 Creating storage symlink..."
            php artisan storage:link || echo "⚠️ Failed to create storage symlink"

            echo "📁 Ensuring compiled view directory exists..."
            mkdir -p storage/framework/views || { echo "❌ Failed to create compiled view directory"; exit 1; }

            echo "🧹 Clearing caches..."
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear

            echo "⚡ Caching configuration, routes, and views..."
            php artisan config:cache || { echo "❌ Failed to cache config"; exit 1; }
            php artisan route:cache || { echo "❌ Failed to cache routes"; exit 1; }
            php artisan view:cache || { echo "❌ Failed to cache views"; exit 1; }

            echo "✅ Remote setup and deployment completed successfully."

          EOF

      - name: Run Tests and Generate Coverage
        continue-on-error: true
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            set +e
            cd ~/laravel-app
            ./vendor/bin/pest --coverage-html=coverage-report --coverage-clover=coverage.xml || true
            if [ -f coverage.xml ]; then
              echo "✅ Coverage generated"
              grep -oP 'filename.*?line-rate="\K[^"]+' coverage.xml | awk '{sum += $1} END {print "Avg coverage: " sum/NR*100 "%"}'
            else
              echo "❌ Coverage report not found"
            fi
            tail -20 ~/laravel.log || echo "No Laravel log found"
          EOF

      - name: Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage-report/
            coverage.xml
          retention-days: 1

      - name: Final Status Report
        if: always()
        run: |
          if [ "${{ job.status }}" == 'success' ]; then
            echo "✅ Deployment complete"
          else
            echo "⚠️ Completed with warnings"
          fi
