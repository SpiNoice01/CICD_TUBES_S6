name: Deploy Laravel to Azure VM and Analyze with SonarCloud

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup PHP environment
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update
          sudo apt-get install -y php8.3 php8.3-cli php8.3-xml php8.3-mbstring php8.3-sqlite3 php8.3-xdebug

          # Configure Xdebug
          echo "xdebug.mode=coverage" | sudo tee -a /etc/php/8.3/mods-available/xdebug.ini
          sudo phpenmod xdebug
          echo "memory_limit=-1" | sudo tee -a /etc/php/8.3/cli/php.ini

          php -v
          php -m | grep xdebug

      - name: Install npm dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Run tests with coverage
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel_test
          DB_USERNAME: root
          DB_PASSWORD: root
          APP_ENV: testing
        run: |
          composer install || true
          php artisan config:clear || true
          php8.3 ./vendor/bin/pest --coverage-clover=coverage.xml || true

      - name: Setup SSH
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy Application via rsync
        shell: bash
        run: |
          rsync -avz --no-perms --no-owner --no-group --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='.env' \
            --exclude='storage/*' \
            --exclude='node_modules' \
            --exclude='coverage.xml' \
            ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/laravel-app/

      - name: Remote Setup & Deploy
        shell: bash
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd ~/laravel-app

            # Install required packages
            sudo apt-get update
            sudo apt-get install -y php8.3 php8.3-fpm php8.3-cli php8.3-mysql php8.3-mbstring php8.3-xml php8.3-zip unzip curl

            echo "🔧 Fixing permissions..."
            sudo chown -R $USER:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache

            echo "🌱 Setting up environment..."
            if [ ! -f .env ]; then
              cp .env.example .env
              php artisan key:generate
            fi

            echo "📦 Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader

            echo "🗃️ Migrating database..."
            php artisan migrate --force

            echo "♻️ Restarting services..."
            sudo systemctl restart nginx
            sudo systemctl restart php8.3-fpm
          EOF
